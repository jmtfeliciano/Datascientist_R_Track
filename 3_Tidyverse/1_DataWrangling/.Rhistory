gapminder
library(gapminder)
install.packages(gapminder)
install.packages("gapminder")
search()
library(gapminder)
search()
gapminder
data(gapminder)
?gapminder
??gapminder
str(gapminder)
library("gapminder")
search()
gapminder
gapminder
# load gapminder package which is built within the R program
library(gapminder)
# load gapminder package which is built within the R program
library(gapminder)
# load gapminder package which is built within the R program
library(gapminder)
# call gapminder to see what kind of dataset it includes
# load gapminder package which is built within the R program
library(gapminder)
# call gapminder to see what kind of dataset it includes
gapminder
# load gapminder package which is built within the R program
library(gapminder)
# load dplyr which is a key part of the tidyverse system
library(dplyr)
# call gapminder to see what kind of dataset it includes
gapminder
dplyr
library("dplyr")
dplyr
?dplyr
library(dplyr)
number_vector <- c(1,2,4,5)
sum(number_vector)
number_vector %>% sum()
number_vector %>% is.vector()
library(gapminder)
library(dplyr)
# Filter the gapminder dataset for the year 1957
gapminder %>%
filter(year == 1957)
library(gapminder)
library(dplyr)
# Filter the gapminder dataset for the year 1957
gapminder %>%
filter(year == 1957)
# Filter for China in 2002
gapminder %>%
filter(country == "China", year == 2002)
?arrange
gapminder %>%
filter(year == 1957) %>%
arrange(desc(pop))
gapminder %>%
mutate(lifeExp = lifeExp * 12)
gapminder %>%
mutate(lifeExpMonths = 12 * lifeExp)
# Filter, mutate, and arrange the gapminder dataset
gapminder %>%
filter(year == 2007) %>%
mutate(lifeExpMonths = 12 * lifeExp) %>%
arrange(desc(lifeExpMonths))
# Filter, mutate, and arrange the gapminder dataset
gapminder %>%
filter(year == 2007) %>%
mutate(lifeExpMonths = 12 * lifeExp) %>%
arrange(desc(lifeExpMonths))[,c("country", "year")]
# Filter, mutate, and arrange the gapminder dataset
gapminder %>%
filter(year == 2007) %>%
mutate(lifeExpMonths = 12 * lifeExp) %>%
arrange(desc(lifeExpMonths))
matrix_sample <- matrix(c(1,2,3,4,5,6,7,8,9), nrow = 3, byrow = TRUE)
matrix_sample
colnames(matrix_sample) <- paste("column ", 1:3)
matrix_sample
colnames(matrix_sample) <- paste("column", 1:3)
matrix_sample
matrix_sample[,"column 1"]
matrix_sample[,c("column 1", "column 3")]
matrix_sample
# load gapminder package which is built within the R program
library(gapminder)
# load dplyr which is a key part of the tidyverse system
library(dplyr)
# call gapminder to see what kind of dataset it includes
gapminder
# unnecessary since it was declared already but just put it for future use
library(gapminder)
library(dplyr)
# Filter the gapminder dataset for the year 1957
gapminder %>%
filter(year == 1957)
# Filter for China in 2002
gapminder %>%
filter(country == "China", year == 2002)
# Sort in ascending order of lifeExp
gapminder %>%
arrange(lifeExp)
# Sort in descending order of lifeExp
gapminder %>%
arrange(desc(lifeExp))
gapminder %>%
filter(year == 1957) %>%
arrange(desc(pop))
gapminder %>%
mutate(lifeExp = lifeExp * 12)
gapminder %>%
mutate(lifeExpMonths = 12 * lifeExp)
# Filter, mutate, and arrange the gapminder dataset
gapminder %>%
filter(year == 2007) %>%
mutate(lifeExpMonths = 12 * lifeExp) %>%
arrange(desc(lifeExpMonths))
library(ggplot2)
search()
library(ggplot2)
# we will need to manipulate data so load dplyr
library(dplyr)
library(ggplot2)
# we will need to manipulate data so load dplyr.
library(dplyr)
# load gapminder data we previously used
library(gapminder)
gapminder_1952 <- gapminder %>%
filter(year == 1952)
# Change to put pop on the x-axis and gdpPercap on the y-axis
ggplot(gapminder_1952, aes(x = gdpPercap, y = lifeExp)) +
geom_point()
gapminder_1952 <- gapminder %>%
filter(year == 1952)
# Change to put pop on the x-axis and gdpPercap on the y-axis
plot1 <- ggplot(gapminder_1952, aes(x = gdpPercap, y = lifeExp)
plot1
gapminder_1952 <- gapminder %>%
filter(year == 1952)
# Change to put pop on the x-axis and gdpPercap on the y-axis
plot1 <- ggplot(gapminder_1952, aes(x = gdpPercap, y = lifeExp))
plot1
gapminder_1952 <- gapminder %>%
filter(year == 1952)
# Change to put pop on the x-axis and gdpPercap on the y-axis
ggplot(gapminder_1952, aes(x = gdpPercap, y = lifeExp)) +
geom_point()
gapminder_1952 <- gapminder %>%
filter(year == 1952)
# Change to put pop on the x-axis and gdpPercap on the y-axis
ggplot(gapminder_1952, aes(x = pop, y = gdpPercap)) +
geom_point()
# Filtering data and assigning the results to a variable
gapminder_1952 <- gapminder %>%
filter(year == 1952)
# Change to put pop on the x-axis and gdpPercap on the y-axis.
# Note:  geom_point() is what plots it like: ggplot() + geom_point()
ggplot(gapminder_1952, aes(x = pop, y = gdpPercap)) +
geom_point()
class(gapminder)
str(gapminder)
gapminder$country
gapminder[c(country, year)]
gapminder[c("country", "year")]
is.data.frame(gapminder[c("country", "year")])
# we previously filtered and declared gapminder_1952
# reminder: regular plotting requires ggplot() + geom_point()
# plotting data with log10 as the primary scale for x-axis:
ggplot(gapminder_1952, aes=(pop, lifeExp)) + geom_point() + scale_x_log10()
# we previously filtered and declared gapminder_1952
# reminder: regular plotting requires ggplot() + geom_point()
# plotting data with log10 as the primary scale for x-axis:
ggplot(gapminder_1952, aes=(pop, lifeExp)) + geom_point() + scale_x_log10()
# we previously filtered and declared gapminder_1952
# reminder: regular plotting requires ggplot() + geom_point()
# plotting data with log10 as the primary scale for x-axis:
ggplot(gapminder_1952, aes=(pop, lifeExp)) + geom_point() + scale_x_log10()
# we previously filtered and declared gapminder_1952
# reminder: regular plotting requires ggplot() + geom_point()
# plotting data with log10 as the primary scale for x-axis:
ggplot(gapminder_1952, aes=(pop, lifeExp)) + geom_point() + scale_x_log10()
# we previously filtered and declared gapminder_1952
# reminder: regular plotting requires ggplot() + geom_point()
# plotting data with log10 as the primary scale for x-axis:
ggplot(gapminder_1952, aes=(pop, lifeExp)) + geom_point() + scale_x_log10()
# we previously filtered and declared gapminder_1952
# reminder: regular plotting requires ggplot() + geom_point()
# plotting data with log10 as the primary scale for x-axis:
ggplot(gapminder_1952, aes=(pop, lifeExp)) + geom_point() + scale_x_log10()
# we previously filtered and declared gapminder_1952
# reminder: regular plotting requires ggplot() + geom_point()
# plotting data with log10 as the primary scale for x-axis:
ggplot(gapminder_1952, aes=(pop, lifeExp)) + geom_point() + scale_x_log10()
# we previously filtered and declared gapminder_1952
# reminder: regular plotting requires ggplot() + geom_point()
# plotting data with log10 as the primary scale for x-axis:
ggplot(gapminder_1952, aes=(pop, lifeExp)) + geom_point() + scale_x_log10()
# we previously filtered and declared gapminder_1952
# reminder: regular plotting requires ggplot() + geom_point()
# plotting data with log10 as the primary scale for x-axis:
ggplot(gapminder_1952, aes=(pop , lifeExp)) + geom_point() + scale_x_log10()
# we previously filtered and declared gapminder_1952
# reminder: regular plotting requires ggplot() + geom_point()
# plotting data with log10 as the primary scale for x-axis:
ggplot(gapminder_1952, aes(pop , lifeExp)) + geom_point() + scale_x_log10()
ggplot(gapminder_1952, aes(pop , lifeExp, color = continent)) + geom_point() + scale_x_log10()
ggplot(gapminder_1952, aes(x = pop, y = lifeExp, color = continent, size = gdpPercap)) +
geom_point() +
scale_x_log10()
